/* dont use px values to breakpoints */

/* media queries don't respond to the font-size of the html, so if we use font-size: 62.5% = 10px, it'll just ignore it and always be 16px */
/* rem and end do NOT respond on html font-size in media queries.
Instead, 1rem = 1em = 16px */

/**********************/
/* BELOW 1344px (Smaller desktops) */
/* 1344 is defined with the multiplication of 84em*16px */
/**********************/

@media (max-width: 84em) {
  /* 84 is te result of the desired breakpoint (1350) in pixels divided by 16 */
  .hero {
    max-width: 120rem;
  }

  .heading-primary {
    font-size: 4.4rem;
  }

  .gallery {
    grid-template-columns: repeat(2, 1fr);
  }
}

/**********************/
/* BELOW 1200px (Landscape Tablets) */
/**********************/

@media (max-width: 75em) {
  /* now we want to make the everything smaller, and we can do that easily because we set before the font-size @ <html> and set the size of each element on rem instead of px, so we change the % value to something smaller. */
  html {
    /* 9px / 16px = 56.25% */
    font-size: 56.25%;
  }

  .grid {
    column-gap: 4.8rem;
    row-gap: 6.4rem;
  }

  /* for other elements we still do the calculation as they still were 10px (62.5%) */
  .heading-secondary {
    font-size: 3.6rem;
  }

  .heading-tertiary {
    font-size: 2.4rem;
  }

  .header {
    padding: 0 3.2rem;
  }

  .main-nav-list {
    gap: 3.2rem;
  }

  .hero {
    gap: 4.8rem;
  }

  .testimonials-container {
    padding: 9.6rem 3.2rem;
  }
}

/**********************/
/* BELOW 944px (Tablets) */
/**********************/
/* Breakpoints should work in a range of atleast 200/300px */
/* It's time to move elements in one row */
@media (max-width: 59em) {
  html {
    font-size: 50%;
  }

  .hero {
    grid-template-columns: 1fr;
    padding: 0 8rem;
  }

  .hero-text-box,
  .hero-img-box {
    /* text-align also aligns <img> as they are inline elements. */
    text-align: center;
  }

  .delivered-meals {
    justify-content: center;
  }

  .hero-img {
    width: 60%;
  }

  .hero {
    gap: 6.4rem;
  }

  .delivered-meals {
    margin-top: 3.2rem;
  }

  .logos img {
    height: 2.4rem;
  }

  .step-number {
    font-size: 7.4rem;
  }

  .meal-content {
    padding: 2.4rem 3.2rem 3.2rem 3.2rem;
  }

  .section-testimonials {
    grid-template-columns: 1fr;
  }

  .gallery {
    grid-template-columns: repeat(6, 1fr);
  }

  .cta {
    /* 3/5 = 60% + 2/5 = 40% */
    grid-template-columns: 3fr 2fr;
  }

  .cta-form {
    grid-template-columns: 1fr;
  }

  .btn--form {
    margin-top: 1.2rem;
  }

  /* MOBILE NAVIGATION */
  .btn-mobile-nav {
    display: block;
    /* z-index bc it was at the bottom */
    z-index: 9999;
  }

  .main-nav {
    background-color: rgba(255, 255, 255, 0.5);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);

    /* no need to set parent element as relative bc we want the nav to occupy the entire viewport (body) */
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100vh;
    /* move the mobile nav bar to the right */
    /* transform is more performant (smooth) to use with animations than top - left */
    transform: translateX(100%);

    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.5s ease-in;

    /* Hide navigation */
    /* animations don't work with display: none */
    /* display: none; */

    /* 1) Hide it visually */
    opacity: 0;

    /* 2) Make it unnaccessible to mouse and keyboard */
    pointer-events: none;

    /* 3) Hide it from screen readers */
    visibility: none;
  }

  /* /////////////////// */
  /* adds only to the main-nav if .nav-open is the parent */
  .nav-open .main-nav {
    opacity: 1;
    pointer-events: auto;
    visibility: visible;

    transform: translateX(0);
  }

  /* only shows close icon when .nav-open is active */
  .nav-open .icon-mobile-nav[name="close-outline"] {
    display: block;
  }

  .nav-open .icon-mobile-nav[name="menu-outline"] {
    display: none;
  }

  .main-nav-list {
    flex-direction: column;
    gap: 4.8rem;
  }

  .main-nav-link:link,
  .main-nav-link:visited {
    font-size: 3rem;
  }
}

/**********************/
/* BELOW 704px (Smaller Tablets) */
/**********************/

@media (max-width: 44em) {
  .grid--3-cols,
  .grid--4-cols {
    grid-template-columns: repeat(2, 1fr);
  }

  .diets {
    /* the item now occupies 2 columns */
    grid-column: 1 / -1;
    /* to make it center, bc the item will stay the same if not */
    justify-self: center;
  }

  .heading-secondary {
    margin-bottom: 4.8rem;
  }

  .pricing-plan {
    width: 100%;
  }

  .grid--footer {
    grid-template-columns: repeat(6, 1fr);
  }

  .nav-col {
    grid-row: 1;
    grid-column: span 2;
    margin-bottom: 3.2rem;
  }

  .logo-col,
  .address-col {
    grid-column: span 3;
  }
}

/**********************/
/* BELOW 544px (Smartphones) */
/**********************/
@media (max-width: 34em) {
  /* everything is one column */

  .grid {
    row-gap: 4.8rem;
  }

  .grid--2-cols,
  .grid--3-cols,
  .grid--4-cols {
    grid-template-columns: 1fr;
  }

  .section-hero {
    padding: 2.4rem 0 6.4rem 0;
  }

  .hero {
    padding: 0 3.2rem;
  }

  .btn,
  .btn:link,
  .btn:visited {
    padding: 2.4rem;
  }

  .hero-img {
    width: 80%;
  }

  .logos img {
    height: 1.2rem;
  }

  /* child pseudo clases are confusing bc they select the child of the parent and not as the selector may appear in this case (2nd child of .step-img-box). This selects the 2nd child that matches  .step-img-box*/
  /* TLDR; Selects element by tag, not by class name .The # is the order of the child in the container. It has nothing to do with the class name. It's just how it works. */
  .step-img-box:nth-child(2) {
    grid-row: 1;
  }

  .step-img-box:nth-child(6) {
    grid-row: 5;
  }

  /* smartphone images don't have law of proximity because of the predefined bc the grid row gap, so a trick is needed. */
  .step-img-box {
    transform: translateY(24px);
  }

  .testimonials {
    grid-template-columns: 1fr;
  }

  .gallery {
    grid-template-columns: repeat(4, 1fr);
    gap: 1.2rem;
  }

  .cta {
    grid-template-columns: 1fr;
  }

  .cta-text-box {
    padding: 3.2rem;
  }

  /* the image dissapear bc it doesnt have content so css hides it */
  .cta-img-box {
    height: 32rem;
    grid-row: 1;
  }
}

/**********************/
/* BELOW 384px (Smaller Smartphones) */
/**********************/
@media (max-width: 24em) {
  .hero {
    padding: 0 2.4rem;
  }
}

/* 
FONT SIZE SYSTEM (px)
10 / 12 / 14 / 16 / 18 / 20 / 24 / 30 / 36 / 44 / 52 / 62 / 74 / 86 / 98

SPACING SYSTEM (px)
2 / 4 / 8 / 12 / 16 / 24 / 32 / 48 / 64 / 80 / 96 / 128
 */
